package =
import = import IndentHelper from '../../src/IndentHelper'; \n \
import LexerState from '../../src/LexerState'; \n \
import { CommonToken } from 'antlr4ng';
override = \
  helper = new IndentHelper( \n \
    this \n \
  ); \n \
\n \
  public nextToken(): Token { \n \
    var tkn: Token = this.helper.nextToken(); \n \
    //this.debugPrinter(tkn); \n \
    return tkn; \n \
  } \n \
\n \
  public supplyToken(): Token { \n \
    return super.nextToken(); \n \
  } \n \
\n \
  private debugPrinter(tkn: Token) { \n \
    var rawType = this.vocabulary.getSymbolicName(tkn.type); \n \
    console.log("---- " + rawType + " [line=" + tkn.line + ",mode=" + this.mode + ",channel=" + tkn.channel + "] = `" + tkn.text+ "`"); \n \
  } \n \
  public snapshotState(): LexerState { \n \
    return this.helper.snapshotState(); \n \
  } \n \
\n \
  public restoreState(state: LexerState) { \n \
    this.helper.restoreState(state); \n \
  } \n \
\n \
  public enableSingleLineMode() { \n \
    this.helper.enableSingleLineMode(); \n \
  }
helper = if (this.helper.checkTextBlockBound(this.text)) { this.popMode(); }
position = this.tokenStartCharIndex